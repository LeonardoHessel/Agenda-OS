<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ilBotoes.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ilBotoes.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAC+
        DAAAAk1TRnQBSQFMAgEBBAEAAXgBAAF4AQABIAEAASABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAGA
        AwABQAMAAQEBAAEgBgABgP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A
        /wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A
        /wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8AogADHwEsA0wBjwNeAdUDoQH3A6EB9wNgAdQDSwGOAx0BKv8A
        2QADBAEGA04BlAPBAfwY/wPBAfwDTAGSAwQBBf8AzQADBAEGA1cBugT/A60B+QNPAZcDIwE0AwUBBwMF
        AQcDJAE1A04BmAOtAfkE/wNYAbkDBAEG/wCdADT/A2IB5AMhATAYAAMiATIDZwHlBP8DTgGWEAADDAEQ
        AxoBJQMAAQH/AIEAMP8DrQH5AyABLgwACP8MAAMhATADogH4A8EB/AMdASoMAAMVAR0E/wN1Ae8DWgG9
        A0oBiQM1AVYDGAEi+AADBAEFA0kBhwNpAeow/wNpAeoDSAGGAwQBBTAACP8gAANNAZEE/wNLAY4QAAj/
        EAADTQGRBP8DSgGNEAADagHpFP8DdgHuAzUBV2QAWP80AANJAYhA/wNIAYUwAAj/IAADYAHWBP8DJAE1
        EAAI/xAAAycBOgT/A10B0xAAA1YBtgT/A0wBkgNIAYUDVwG6A3kB8AT/A7sB+wM1AVdgAFj/NAADaAHo
        BP8DKAE8MAADKQE+BP8DaQHmMAAI/yAAA4sB9AT/AwkBDAQAIP8EAAMKAQ4E/wOEAfIQAANIAYME/wNI
        AYQIAANXAbcI/wO7AfsDNQFXXAAI/wgACP8oAAj/CAAI/zQACP84AAj/MAAI/yAAA4QB8gT/AwkBDAQA
        IP8EAAMKAQ4E/wOAAfEQAAMyAVAE/wNXAbcEAANEAXoE/wNxAesDTgGWBP8DuwH7AzUBV1gACP8IAAj/
        KAAI/wgACP80AAj/OAAI/zAACP8gAANgAdYE/wMkATUQAAj/EAADJgE4BP8DXQHTEAADFQEdBP8DdgHu
        A1YBswT/A+IB/gMvAUoEAANKAYoE/wO7AfsDNQFXVAAI/wgACP8oAAj/CAAI/zQACP8IAAj/CAAI/wgA
        CP8IAAj/MAAI/yAAA00BkQT/A0sBjhAACP8QAANNAZEE/wNLAY4UAANqAekI/wNwAewDMAFMDAADSgGK
        BP8DuwH7AzYBWFAACP8IAAj/KAAI/wgACP80AAj/CAAI/wgACP8IAAj/CAAI/zAACP8gAAMfAS0D0wH9
        A6EB9wMgAS4MAAj/DAADIQEwA6IB+APBAfwDHQEqFAADMQFPA60B+QT/A04BlhQAA0oBigT/A7sB+wM2
        AVhMAAj/CAAI/ygACP8IAAj/NAAI/wgACP8IAAj/CAAI/wgACP8wAAj/JAADUAGaBP8DYgHkAyIBMRgA
        AyIBMgNnAeUE/wNOAZYcAAM3AVsDwQH8BP8DRwGAEwABAQNOAZkE/wOiAfgDMAFLSAAI/wgACP8oAAj/
        CAAI/zQACP8IAAj/CAAI/wgACP8IAAj/MAAI/yQAAwUBBwNXAboE/wOtAfkDTwGXAyMBNAMNAREDDQER
        AyQBNQNOAZgDrwH6BP8DWAG5AwQBBiAAAzgBXAPBAfwE/wNHAYATAAEBA04BmQT/A6IB+AMwAUtEAAj/
        CAAI/ygACP8IAAj/NAAI/wgACP8IAAj/CAAI/wgACP8wAAj/KAADBAEGA04BlQPTAf0Y/wPBAfwDTAGS
        AwQBBSgAAzgBXAPBAfwE/wNHAYATAAEBA04BmQT/A68B+gMzAVJAAAj/CAA4/wgACP80AAj/CAAI/wgA
        CP8IAAj/CAAI/zAACP8wAAMfASwDSwGOA2AB1ANxAesI/wNLAY4DHgErNAADOAFcA8EB/AT/A0cBgBMA
        AQEDTgGZBP8DrwH6AzMBUjwACP8IADj/CAAI/zQACP8IAAj/CAAI/wgACP8IAAj/MAAI/0AACP9AAAM4
        AV0DwQH8BP8DRwGAEwABAQNOAZkE/wOvAfoDMwFSOAAI/0gACP80AAj/CAAI/wgACP8IAAj/CAAI/zAA
        CP9AAAj/RAADOAFdA8EB/AT/A0cBgBMAAQEDTgGZBP8DrwH6AzMBUjQACP9IAAj/NAAI/wgACP8IAAj/
        CAAI/wgACP8wAAj/QAAI/0gAAzgBXgPBAfwE/wNHAYATAAEBA04BmQT/A68B+gMzAVIwAAj/SAAI/zQA
        CP8IAAj/CAAI/wgACP8IAAj/MAAI/0AACP9MAAM1AVUDuwH7BP8DSgGJFAADSgGKBP8DwQH8AzcBWiwA
        CP8MADD/DAAI/zQACP8IAAj/CAAI/wgACP8IAAj/MAAI/0AACP9QAAM1AVYDuwH7BP8DSgGJEAADEgEY
        A3YB7gT/A8EB/AM3AVooAAj/DAAw/wwACP80AAj/OAAI/zAACP8oACD/VAADNQFWA7sB+wT/A0oBiQgA
        AxEBFwNgAdYE/wNyAe0E/wOtAfkDIAEvJAAI/wwACP8gAAj/CAADEAEVCP80AAj/OAAI/zAACP8oABz/
        A2AB1lgAAzUBVwO7AfsE/wNKAYkDEAEWA14B1QT/A14B1QMRARcDTgGWBP8DWgG9JAAI/wwACP8gAAj/
        BAADEAEVA10B0gT/A14B1TQACP84AAj/MAAI/ygACP8EAAMMARADXQHKBP8DYQHaAxQBG1wAAzYBWAPB
        AfwE/wNwAewE/wNgAdQDEAEWBAADCAELA68B+gOQAfYDBAEFIAAI/wwACP8QAAj/CAAI/wMMARADXQHK
        BP8DXgHZAxQBGzAAUP8sAAj/KAAI/wMMARADXQHKBP8DXgHZAxQBG2QAAzYBWQPBAfwE/wNwAewDEAEW
        CAADEgEZA+IB/gN1Ae8DAAEBIAAI/wwACP8QAAj/CAAI/wNdAcoE/wNeAdgDEwEaNABQ/ywACP8oAAj/
        A10BygT/A14B2QMTARpsAAM3AVoDwQH8BP8DTgGVAwcBCgMTARoDWgHABP8DUgGnJABI/wNeAdADDwEU
        UAAI/xAACP9EAAj/KAAM/wNeAdgDEwEadAADNwFbA68B+gT/A60B+QPTAf0E/wNxAesDEgEZJABE/wNe
        Ac4DDgETVAADaQHmGP8DYgHkRAA4/wNcAc8DDwEUfAADIwEzA1sBxAOvAfoDiwH0A1QBrgMUARzIAAMz
        AVIDaQHmEP8DaQHmAzEBT0QANP8DXgHOAw4BE4gAAwUBBwMCAQP/AP8A/wD/AP8A/wD/ACMAAUIBTQE+
        BwABPgMAASgDAAGAAwABQAMAAQEBAAEBBgABBBYAA///AP8AAwAC/wHwAQ8O/wHAAQMO/wGAAQEM/wH8
        AQABBwHhAeML/wH8AQABDgFwAeABPwf/AgABPwH8Af8BHgF4AfABDwL/AfgCAAEfAf8CAAE/AfwB/wEe
        AXgB8AEHAv8B+AIAAR8B/wEfAf4BPwH8Af8BEAEIAfEBgwL/AfkBnwH5AZ8B/wE/Af8BPwH8Af8BEAEI
        AfEBAQL/AfkBnwH5AZ8B/wE/Af8BPwH8Af8BHgF4AfABEAL/AfkBnwH5AZ8B/wIzAT8B/AH/AR4BeAH4
        ATgBfwH/AfkBnwH5AZ8B/wIzAT8B/AH/AQ4BcAH4AXwBPwH/AfkBnwH5AZ8B/wIzAT8B/AH/AYcB4QH8
        ATwBHwH/AfkBnwH5AZ8B/wIzAT8B/AH/AYABAQH+AR4BDwH/AfkBnwH5AZ8B/wIzAT8B/AH/AcABAwH/
        AQ8BBwH/AfkBgAEBAZ8B/wIzAT8B/AH/AfABDwH/AYcBgwH/AfkBgAEBAZ8B/wIzAT8B/AL/AT8B/wHD
        AcEB/wH5Av8BnwH/AjMBPwH8Av8BPwH/AeEB4AH/AfkC/wGfAf8CMwE/AfwC/wE/Af8C8AF/AfkC/wGf
        Af8CMwE/AfwC/wE/Af8B+AF8AT8B+QHAAQMBnwH/AjMBPwH8Av8BPwH/AfwBPAEfAfkBwAEDAZ8B/wE/
        Af8BPwH8Af8BwAE/Af8B/gEYAQ8B+QHPAfMBHwH/AT8B/wE/AfwB/wHAAT8C/wEAAQ8B+QHPAfIBHwH/
        AT8B/wE/AfwB/wHIAT8C/wGAAYcB+QHPATABHwH+AgABHwH8Af8BwAF/Av8BwQGHAfkBzwEwAT8B/gIA
        AR8B/AH/AcAD/wHgAQ8B+AIAAX8B/wH5AecB/wH8Af8BwQP/AfABDwH4AgAC/wH4AQcB/wH8AQABAwP/
        AfgBHwX/AfgBBwH/AfwBAAEHA/8B/gF/OP8L
</value>
  </data>
</root>